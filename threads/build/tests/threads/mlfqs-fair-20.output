c[?7l[2J[0mSeaBIOS (version rel-1.11.0-0-g63451fca13-prebuilt.qemu-project.org)


iPXE (http://ipxe.org) 00:03.0 C980 PCI2.10 PnP PMM+0FF915A0+0FEF15A0 C980
Press Ctrl-B to configure iPXE (PCI 00:03.0)...                                                                               


Booting from Hard Disk..Kernel command line: -q -mlfqs run mlfqs-fair-20
Pintos booting with: 
	base_mem: 0x0 ~ 0x100000 (Usable: 704 kB)
	ext_mem: 0x100000 ~ 0x100000000 (Usable: 261,376 kB)
<<<<<<< HEAD
Calibrating timer...  104,755,200 loops/s.
Boot complete.
Executing 'mlfqs-fair-20':
(mlfqs-fair-20) begin
(mlfqs-fair-20) Starting 20 threads...
(mlfqs-fair-20) Starting threads took 2 ticks.
(mlfqs-fair-20) Sleeping 40 seconds to let threads run, please wait...
(mlfqs-fair-20) Thread 0 received 148 ticks.
(mlfqs-fair-20) Thread 1 received 148 ticks.
(mlfqs-fair-20) Thread 2 received 148 ticks.
(mlfqs-fair-20) Thread 3 received 148 ticks.
(mlfqs-fair-20) Thread 4 received 148 ticks.
(mlfqs-fair-20) Thread 5 received 148 ticks.
(mlfqs-fair-20) Thread 6 received 149 ticks.
(mlfqs-fair-20) Thread 7 received 148 ticks.
(mlfqs-fair-20) Thread 8 received 149 ticks.
(mlfqs-fair-20) Thread 9 received 149 ticks.
(mlfqs-fair-20) Thread 10 received 153 ticks.
(mlfqs-fair-20) Thread 11 received 153 ticks.
(mlfqs-fair-20) Thread 12 received 153 ticks.
(mlfqs-fair-20) Thread 13 received 153 ticks.
(mlfqs-fair-20) Thread 14 received 152 ticks.
(mlfqs-fair-20) Thread 15 received 152 ticks.
(mlfqs-fair-20) Thread 16 received 153 ticks.
(mlfqs-fair-20) Thread 17 received 152 ticks.
(mlfqs-fair-20) Thread 18 received 153 ticks.
(mlfqs-fair-20) Thread 19 received 152 ticks.
(mlfqs-fair-20) end
Execution of 'mlfqs-fair-20' complete.
Timer: 4029 ticks
Thread: 1000 idle ticks, 3030 kernel ticks, 0 user ticks
Console: 1476 characters output
Keyboard: 0 keys pressed
Powering off...
=======
Calibrating timer...  Kernel PANIC at ../../lib/kernel/list.c:270 in list_front(): assertion `!list_empty (list)' failed.
Call stack: 0x800420e30c 0x800420eb51 0x800420eb6b 0x800420a9e6 0x800420aa91 0x800420792f 0x8004207afb 0x8004206436.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 1 ticks
Thread: 0 idle ticks, 1 kernel ticks, 0 user ticks
Console: 
>>>>>>> 5222d5cfd04680765785f2a736f661533a4d8c6e
