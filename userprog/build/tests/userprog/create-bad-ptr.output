c[?7l[2J[0mSeaBIOS (version rel-1.11.0-0-g63451fca13-prebuilt.qemu-project.org)


iPXE (http://ipxe.org) 00:03.0 C980 PCI2.10 PnP PMM+0FF915A0+0FEF15A0 C980
Press Ctrl-B to configure iPXE (PCI 00:03.0)...                                                                               


Booting from Hard Disk..Kernel command line: -q -f put create-bad-ptr run create-bad-ptr
0 ~ 9fc00 1
100000 ~ ffe0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0xffe0000 (Usable: 260,992 kB)
Calibrating timer...  104,755,200 loops/s.
hd0:0: detected 313 sector (156 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 100 sector (50 kB) disk, model "QEMU HARDDISK", serial "QM00003"
Formatting file system...done.
Boot complete.
Putting 'create-bad-ptr' into the file system...
Executing 'create-bad-ptr':
(create-bad-ptr) begin
<<<<<<< HEAD
system call!
Execution of 'create-bad-ptr' complete.
Timer: 490 ticks
Thread: 32 idle ticks, 457 kernel ticks, 1 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 79 reads, 228 writes
hd1:0: 100 reads, 0 writes
Console: 851 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
=======
Page fault at 0x20101234: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at rip=800421d939
 cr2=0000000020101234 error=               0
rax 0000000020101234 rbx 0000000000000000 rcx 00000000004034db rdx 0000000000000000
rsp 00000080042b8ee0 rbp 00000080042b8ef0 rsi 0000000000000000 rdi 0000000020101234
rip 000000800421d939 r8 0000000000000000  r9 0000000000000000 r10 0000000000000000
r11 0000000000000206 r12 000000800421d755 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 001b ds: 001b cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x8004218661 0x800421d48a 0x800421d609 0x80042095f1 0x8004209a0f 0x800421d802 0x800421d67e 0x400102 0x400180 0x400c21.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 258 ticks
Thread: 34 idle ticks, 217 kernel ticks, 7 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 79 reads, 228 writes
hd1:0: 100 reads, 0 writes
Console: 1773 characters output
Key
>>>>>>> lab2_juntos
