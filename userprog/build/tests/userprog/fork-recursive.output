c[?7l[2J[0mSeaBIOS (version rel-1.11.0-0-g63451fca13-prebuilt.qemu-project.org)


iPXE (http://ipxe.org) 00:03.0 C980 PCI2.10 PnP PMM+0FF915A0+0FEF15A0 C980
Press Ctrl-B to configure iPXE (PCI 00:03.0)...                                                                               


Booting from Hard Disk..Kernel command line: -q -f put fork-recursive run fork-recursive
0 ~ 9fc00 1
100000 ~ ffe0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0xffe0000 (Usable: 260,992 kB)
Calibrating timer...  65,433,600 loops/s.
hd0:0: detected 321 sector (160 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 101 sector (50 kB) disk, model "QEMU HARDDISK", serial "QM00003"
Formatting file system...done.
Boot complete.
Putting 'fork-recursive' into the file system...
Executing 'fork-recursive':
(fork-recursive) begin
(fork-recursive) child run
(fork-recursive) child run
(fork-recursive) child run
(fork-recursive) child run
(fork-recursive) child run
(fork-recursive) child run
(fork-recursive) child run
(fork-recursive) child run
child: exit(10)
(fork-recursive) Parent: child exit status is 10
child: exit(10)
(fork-recursive) Parent: child exit status is 10
child: exit(9)
(fork-recursive) Parent: child exit status is 9
child: exit(8)
(fork-recursive) Parent: child exit status is 8
child: exit(7)
(fork-recursive) Parent: child exit status is 7
child: exit(6)
(fork-recursive) Parent: child exit status is 6
child: exit(5)
(fork-recursive) Parent: child exit status is 5
child: exit(4)
Interrupt 0x0d (#GP General Protection Exception) at rip=800421f2bd
 cr2=0000000000000000 error=               0
rax cccccccccccccccc rbx 0000000000000000 rcx 0000000000000000 rdx 0000000000000010
rsp 00000080042b9e30 rbp 00000080042b9e40 rsi 00000080042bb068 rdi cccccccccccccccc
rip 000000800421f2bd r8 00000080042b9df8  r9 000000800421bbf0 r10 0000000000000000
r11 0000000000000202 r12 000000800421dcd9 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000286
es: 001b ds: 001b cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:98 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x8004218777 0x800421d9c2 0x8004209707 0x8004209b25 0x800421f090 0x800421be94 0x800421c7fa 0x80042075c6 0x800421e091 0x800421dd43 0x800421dc02 0x4001e7 0x4001f9 0x400257 0x400cf8.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 99 ticks
Thread: 35 idle ticks, 34 kernel ticks, 30 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 85 reads, 230 writes
hd1:0: 101 reads, 0 writes
Console: 2440 characters output
Key